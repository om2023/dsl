include<iostream>
#include<stdio.h>
#define MAX 10
using namespace std;
struct que
{
int arr[MAX];
int front,rear;
};
void init(struct que *q)
{
q->front=-1;
q->rear=-1;
}
void print(struct que q)
{
int i;
i=q.front;
while(i!=q.rear)

{
cout<<"\t"<<q.arr[i];
i=(i+1)%MAX;
}
cout<<"\t"<<q.arr[q.rear];
}
int isempty(struct que q)
{
return q.rear==-1?1:0;
}
int isfull(struct que q)
{
return (q.rear+1)%MAX==q.front?1:0;
}
void addf(struct que *q,int data)
{
if(isempty(*q))
{
q->front=q->rear=0;
q->arr[q->front]=data;
}
else
{
q->front=(q->front-1+MAX)%MAX;
q->arr[q->front]=data;
}
}
void addr(struct que *q,int data)
{
if(isempty(*q))
{
q->front=q->rear=0;
q->arr[q->rear]=data;
}
else
{

q->rear=(q->rear+1)%MAX;
q->arr[q->rear]=data;
}
}
int delf(struct que *q)
{
int data1;
data1=q->arr[q->front];
if(q->front==q->rear)
init(q);
else
q->front=(q->front+1)%MAX;
return data1;
}
int delr(struct que *q)
{
int data1;
data1=q->arr[q->rear];
if(q->front==q->rear)
init(q);
else
q->rear=(q->rear-1+MAX)%MAX;
return data1;
}
int main()
{
struct que q;
int data,ch;
init(&q);
while(ch!=6)
{
cout<<"\n**********MENU**********";
cout<<"\n1. Insert at beginning";
cout<<"\n2. Insert at end";
cout<<"\n3. Deletion from front";
cout<<"\n4. Deletion from rear";

cout<<"\n5. Display";
cout<<"\n6. Exit";
cout<<"\n\nEnter your choice : ";
cin>>ch;
switch(ch)
{
case 1:
cout<<"\nEnter data to insert front : ";
cin>>data;
addf(&q,data);
break;
case 2:
cout<<"\nEnter the data to insert rear : ";
cin>>data;
addr(&q,data);
break;
case 3:
if(isempty(q))
cout<<"\nDeque is empty!!!";
else
{
data=delf(&q);
cout<<"\nDeleted data is : "<<data;
}
break;
case 4:
if(isempty(q))
cout<<"\nDeque is empty!!!";
else
{
data=delr(&q);
cout<<"\nDeleted data is : "<<data;
}
break;
case 5:
if(isempty(q))
cout<<"\nDeque is empty!!!";
else
{
cout<<"\nDeque elements are : ";

print(q);
}
break;
}
}
return 0;
}
Program Output: 
**********MENU**********
1. Insert at beginning
2. Insert at end
3. Deletion from front
4. Deletion from rear
5. Display
6. Exit
Enter your choice : 1
Enter data to insert front : 101
**********MENU**********
1. Insert at beginning
2. Insert at end
3. Deletion from front
4. Deletion from rear
5. Display
6. Exit
Enter your choice : 2
Enter the data to insert rear : 102
**********MENU**********
1. Insert at beginning
2. Insert at end
3. Deletion from front
4. Deletion from rear
5. Display
6. Exit
Enter your choice : 1

Enter data to insert front : 103
**********MENU**********
1. Insert at beginning
2. Insert at end
3. Deletion from front
4. Deletion from rear
5. Display
6. Exit
Enter your choice : 2
Enter the data to insert rear : 104
**********MENU**********
1. Insert at beginning
2. Insert at end
3. Deletion from front
4. Deletion from rear
5. Display
6. Exit
Enter your choice : 5
Deque elements are : 103 101 102 104
**********MENU**********
1. Insert at beginning
2. Insert at end
3. Deletion from front
4. Deletion from rear
5. Display
6. Exit
Enter your choice : 3
Deleted data is : 103
**********MENU**********
1. Insert at beginning
2. Insert at end
3. Deletion from front
4. Deletion from rear
5. Display
6. Exit
Enter your choice : 4
MET’s Bhujbal Knowledge City, Institute of Engineering
SE: Data Structures Laboratory Submission 72
Deleted data is : 104
**********MENU**********
1. Insert at beginning
2. Insert at end
3. Deletion from front
4. Deletion from rear
5. Display
6. Exit
Enter your choice : 5
Deque elements are : 101 102
MET’s Bhujbal Knowledge City, Institute of Engineering
SE: Data Structures Laboratory Submission 73
Assignment Title: Pizza parlor accepting maximum M orders. Orders are served in first 
come first served basis. Order once placed cannot be cancelled. Write 
C++ program to simulate the system using circular queue using array. 
Assignment No.: A-13
Student Name: Shermale Vaibhav Valmik
Year & DIV.: SE A
Batch: D
Roll No: 64
Program Code:
 
#include<iostream>
using namespace std;
#define max 20
class cque
{
public:
int front,rear,que[max];
cque()
{
front=rear=-1;
}
void add(int a);
void delorder();
int is_full();
int is_empty();
void display();
};
int cque::is_full()
{
if(((front==0)&&(rear==(max-1)))||(front==(rear+1)))
return 1;
else

return 0;
}
int cque::is_empty()
{
if(front==-1)
return 1;
else
return 0;
}
void cque::add(int a)
{
if(is_full())
cout<<"Queue is full.";
else if(front==-1)
front=rear=0;
else
{
rear=(rear+1)%max;
que[rear]=a;
}
}
void cque::delorder()
{
int i;
i=que[front];
if(front==rear)
front=rear=-1;
else
{
front=(front+1)%max;
}
cout<<"\nOrder deleted :"<<i;
}
void cque::display()
{
int temp;

temp=front;
if(is_empty())
cout<<"Queue is empty.";
else
{
while(temp!=rear)
{
cout<<" "<<que[temp];
temp=(temp+1)%max;
}
cout<<" "<<que[temp];
}
}
int main()
{
cque c;
int ch,x;
do
{
cout<<"\n1.Insert order\n2.Delete order\n3.Display orders\n4.Exit\nEnter your 
choice:";
cin>>ch;
switch(ch)
{
case 1:
cout<<"\nEnter order no.:";
cin>>x;
c.add(x);
break;
case 2:
c.delorder();
break;
case 3:
cout<<"Queue contains :";
c.display();
break;
case 4:
cout<<"\nExiting program..";
}

}while(ch!=4);
return 0;
}
